

3.
오버라이딩이란 객체 별로 메소드를 새롭게 정의하는 것이다.
오버라이딩은 주로 추상클래스의 자식 클래스에서 시행된다.

오버라이딩은 다형성을 이루어준다.
자식클래스가 부모클래스 메소드를 오버라이딩하면, 자식 객체별로 해당 메소드 호출 시 다르게 행동한다.

4.
d, e

5.
자식클래스 생성자 메소드를 만족하는 부모 클래스 생성자가 없기 때문이다.
따라서 Product class에 Product(){}를 추가한다.

6.
조상에 정의된 인스턴스 변수들을 초기화하기 위해.
: 자손클래스의 인스턴스를 생성하면 자동으로 조상클래스의 인스턴스변수도 생성된다. 이 변수들도 초기화 해야 한다.

7.
결과 : x=200
호출순서 : Child() -> Child(int x) -> Parent() -> Parent(int x)
:Child class의 x는 1000, Parent class의 x는 200이 된다.
getX메소드는 Parent의 메소드이므로 parent의 x값이 리턴된다.

8.
a

9.
c

12.
c: 접근 제어자가 사용될 수 있는 곳은 클래스, 맴버변수, 매서드, 생성자이다.

13.
인스턴스를 생성할 필요가 없기 때문이다(클래스에 final 키워드 사용)

15.
e.
조상인스턴스를 자손으로 형변환 할 수 없다.

16.
fe is instance of car , movabe and object.